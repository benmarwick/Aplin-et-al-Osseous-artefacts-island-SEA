xlab("Size class")
ggplot(figure_twenty_eight, aes([[Raw Material]], value)) +
geom_histogram()
ggplot(figure_twenty_eight, aes('Raw Material', value)) +
geom_histogram()
ggplot(figure_twenty_eight, aes('Raw Material', value)) +
geom_histogram(stat = 'identity') +
theme_minimal(base_size = 12)
ggplot(figure_twenty_eight, aes(`Raw Material`, value)) +
geom_histogram(stat = 'identity') +
theme_minimal(base_size = 12)
ggplot(figure_twenty_eight, aes(`Raw Material`, value)) +
geom_histogram(stat = 'identity') +
theme_minimal(base_size = 12) +
facet_grid('use wear'~ .) +
xlab("Size class")
ggplot(figure_twenty_eight, aes(`Raw Material`, value)) +
geom_histogram(stat = 'identity') +
theme_minimal(base_size = 12) +
facet_grid(`use wear` ~ .)
ggplot(figure_twenty_eight, aes(`Raw Material`, value)) +
geom_histogram(stat = 'identity') +
theme_minimal(base_size = 12) +
facet_grid(variable ~ .)
ggplot(figure_twenty_eight, aes(`Raw Material`, value)) +
geom_histogram(stat = 'identity') +
theme_minimal(base_size = 12) +
facet_grid(variable ~ .)
ggplot(figure_twenty_nine, aes(PHASE, value)) +
geom_histogram(stat = 'identity') +
theme_minimal(base_size = 12) +
facet_grid(`use wear` ~ .)
ggplot(figure_twenty_nine, aes(PHASE, value)) +
geom_histogram(stat = 'identity') +
theme_minimal(base_size = 12) +
facet_grid(variable ~ .)
ggplot(figure_thirty, aes(PHASE, value)) +
geom_histogram(stat = 'identity') +
theme_minimal(base_size = 12) +
facet_grid(variable ~ .)
ggplot(figure_thirty_one, aes(PHASE, value)) +
geom_histogram(stat = 'identity') +
theme_minimal(base_size = 12) +
facet_grid(Morphotype ~ .)
packrat::snapshot()
packrat::snapshot()
packrat::status()
packrat::clean()
packrat::status()
packrat::clean()
remove.packages("BH", lib="")
install.packages("BH")
packrat::restore(prompt = FALSE)
packrat::status()
packrat::clean()
packrat::status()
# This is necessary to direct knitr to find the
# 'code', 'data', and other directories that contain
# files needed to execute this document
library(knitr)
opts_knit$set(root.dir=normalizePath('../'))
opts_chunk$set(message = FALSE, echo = FALSE, fig.align='center')
# font size for plots
base_size <- 16
# prioritise dplyr's functions over others
filter <- dplyr::filter
select <- dplyr::select
# This is necessary to direct knitr to find the
# 'code', 'data', and other directories that contain
# files needed to execute this document
library(knitr)
opts_knit$set(root.dir=normalizePath('../'))
opts_chunk$set(message = FALSE, echo = FALSE, fig.align='center')
# font size for plots
base_size <- 16
# prioritise dplyr's functions over others
filter <- dplyr::filter
select <- dplyr::select
bone_data <- read.csv("data/bone_artefact_data.csv", stringsAsFactors = FALSE)
source("code/libraries.r")
# recode a few things for better plotting
bone_data$Morphotype <-  with(bone_data,
ifelse(Morphtype == 'B', "bipoint",
ifelse(Morphtype == 'E', "expedient",
ifelse(Morphtype == 'F', "fragment",
ifelse(Morphtype == 'G', "ground piece",
ifelse(Morphtype == 'S', "shaft fragment",
ifelse(Morphtype == 'Sp', "spatula",
ifelse(Morphtype == 'T', "point tip",
ifelse(Morphtype == 'U', "unipoint",
ifelse(Morphtype == 'I', "indeterminate", "no_data"))))))))))
bone_data$`Raw Material` <-  with(bone_data,
ifelse(Raw.Mat. == 'C', "cortex",
ifelse(Raw.Mat. == 'D', "dentine",
ifelse(Raw.Mat. == 'S', "shaft",
ifelse(Raw.Mat. == 'E', "enamel",
"no_data")))))
bone_data$Burning <-      with(bone_data,
ifelse(Burning.Overall  == 'U', "unburnt",
ifelse(Burning.Overall  == 'B', "burnt",
ifelse(Burning.Overall  == 'C', "calcined",
"no_data"))))
bone_data <- read.csv("data/bone_artefact_data.csv", stringsAsFactors = FALSE)
source("code/libraries.r")
# recode a few things for better plotting
bone_data$Morphotype <-  with(bone_data,
ifelse(Morphtype == 'B', "bipoint",
ifelse(Morphtype == 'E', "expedient",
ifelse(Morphtype == 'F', "fragment",
ifelse(Morphtype == 'G', "ground piece",
ifelse(Morphtype == 'S', "shaft fragment",
ifelse(Morphtype == 'Sp', "spatula",
ifelse(Morphtype == 'T', "point tip",
ifelse(Morphtype == 'U', "unipoint",
ifelse(Morphtype == 'I', "indeterminate", "no_data"))))))))))
bone_data$`Raw Material` <-  with(bone_data,
ifelse(Raw.Mat. == 'C', "cortex",
ifelse(Raw.Mat. == 'D', "dentine",
ifelse(Raw.Mat. == 'S', "shaft",
ifelse(Raw.Mat. == 'E', "enamel",
"no_data")))))
bone_data$Burning <-      with(bone_data,
ifelse(Burning.Overall  == 'U', "unburnt",
ifelse(Burning.Overall  == 'B', "burnt",
ifelse(Burning.Overall  == 'C', "calcined",
"no_data"))))
filter(bone_data, Morphtype == "U", PHASE == "A")
filter(bone_data, Morphtype == "U", PHASE == "B")
filter(bone_data, Morphtype == "U", PHASE == "C")
unique(bone_data$Morphtype)
filter(bone_data, Morphtype == "S", PHASE == "A")
filter(bone_data, Morphtype == "F", PHASE == "A")
filter(bone_data, Morphtype == "F", PHASE == D")
filter(bone_data, Morphtype == "F", PHASE == "D")
filter(bone_data, Morphtype == "F", PHASE == "D")
filter(bone_data, Morphtype == "S", PHASE == "D")
morph_tab <- dcast(Morphotype ~ PHASE, data = bone_data)
morph_tab
morph_tab_subset <- rbind(morph_tab[morph_tab$Morphotype == 'expedient',], c('`other determinate`', unname(colSums(morph_tab[!morph_tab$Morphotype %in% c('unipoint'), 2:ncol(morph_tab)]))))
morph_tab_subset
morph_tab_subset[,2:ncol(morph_tab_subset)] <- data.frame(apply(morph_tab_subset[2:ncol(morph_tab_subset)], 2, as.numeric))
`A-B` <- unname(rowSums(morph_tab_subset[,c('A', 'B')]))
`C-E` <- unname(rowSums(morph_tab_subset[,c('C', 'D', 'E')]))
data.frame(`A-B` = `A-B`, `C-E` = `C-E`  )
morph_tab_subset
morph_tab[!morph_tab$Morphotype %in% c('unipoint'), 2:ncol(morph_tab)]
morph_tab
morph_tab_subset <- rbind(morph_tab[morph_tab$Morphotype == 'expedient',], c('`other determinate`', unname(colSums(morph_tab[!morph_tab$Morphotype %in% c('expedient', 'unipoint'), 2:ncol(morph_tab)]))))
morph_tab_subset
morph_tab_subset[,2:ncol(morph_tab_subset)] <- data.frame(apply(morph_tab_subset[2:ncol(morph_tab_subset)], 2, as.numeric))
`A-B` <- unname(rowSums(morph_tab_subset[,c('A', 'B')]))
`C-E` <- unname(rowSums(morph_tab_subset[,c('C', 'D', 'E')]))
data.frame(`A-B` = `A-B`, `C-E` = `C-E`  )
raw_mat_tab <- dcast(`Raw Material` ~ PHASE, data = bone_data)
raw_mat_tab
raw_mat_tab_subset <- raw_mat_tab_subset[c(1, nrow(raw_mat_tab_subset)), ]
raw_mat_tab_subset <- rbind(raw_mat_tab[raw_mat_tab$`Raw Material` == 'cortex',], c('`other`', unname(colSums(morph_tab[!raw_mat_tab$`Raw Material` %in% c('cortex'), 2:ncol(morph_tab)]))))
raw_mat_tab_subset <- rbind(raw_mat_tab[raw_mat_tab$`Raw Material` == 'cortex',], c('`other`', unname(colSums(morph_tab[!raw_mat_tab$`Raw Material` %in% c('cortex'), 2:ncol(raw_mat_tab)]))))
raw_mat_tab_subset
raw_mat_tab_subset[,2:ncol(raw_mat_tab_subset)] <- data.frame(apply(raw_mat_tab_subset[2:ncol(raw_mat_tab_subset)], 2, as.numeric))
# phase A-D by E
`A-D` <- rowSums(raw_mat_tab_subset[,c('A', 'B', 'C', 'D')])
raw_mat_phase_A_to_D_by_E <- data.frame(`A-D`= `A-D`, E = raw_mat_tab_subset$E)
raw_mat_phase_A_to_D_by_E
raw_mat_tab
morph_tab[!raw_mat_tab$`Raw Material` %in% c('cortex'), 2:ncol(raw_mat_tab)]
raw_mat_tab_subset <- rbind(raw_mat_tab[raw_mat_tab$`Raw Material` == 'cortex',], c('`other`', unname(colSums(raw_mat_tab[!raw_mat_tab$`Raw Material` %in% c('cortex'), 2:ncol(raw_mat_tab)]))))
raw_mat_tab_subset
raw_mat_tab_subset[,2:ncol(raw_mat_tab_subset)] <- data.frame(apply(raw_mat_tab_subset[2:ncol(raw_mat_tab_subset)], 2, as.numeric))
# phase A-D by E
`A-D` <- rowSums(raw_mat_tab_subset[,c('A', 'B', 'C', 'D')])
raw_mat_phase_A_to_D_by_E <- data.frame(`A-D`= `A-D`, E = raw_mat_tab_subset$E)
raw_mat_phase_A_to_D_by_E
# significance test
fisher.test(raw_mat_phase_A_to_D_by_E)
morph_tab_subset <- rbind(morph_tab[morph_tab$Morphotype == 'expedient',], c('`other determinate`', unname(colSums(morph_tab[!morph_tab$Morphotype %in% c('expedient', 'unipoint'), 2:ncol(morph_tab)]))))
# make numeric
morph_tab_subset[,2:ncol(morph_tab_subset)] <- data.frame(apply(morph_tab_subset[2:ncol(morph_tab_subset)], 2, as.numeric))
`A-B` <- unname(rowSums(morph_tab_subset[,c('A', 'B')]))
`C-E` <- unname(rowSums(morph_tab_subset[,c('C', 'D', 'E')]))
data.frame(`A-B` = `A-B`, `C-E` = `C-E`  )
moph_phase_AB_to_CE <- data.frame(`A-B` = `A-B`, `C-E` = `C-E`  )
fisher.exact(moph_phase_AB_to_CE)
fisher.test(moph_phase_AB_to_CE)
morph_tab_subset <- rbind(morph_tab[morph_tab$Morphotype == 'bipoint',], c('`other determinate`', unname(colSums(morph_tab[!morph_tab$Morphotype %in% c('bipoint', 'unipoint'), 2:ncol(morph_tab)]))))
`A` <- unname(rowSums(morph_tab_subset[,c('A')]))
`A` <- unname(rowSums(morph_tab_subset[,c('A')]))
morph_tab_subset
morph_tab_subset[,c('A')]
unname(morph_tab_subset[,c('A')]))
unname(morph_tab_subset[,c('A')])
as.numeric(unname(morph_tab_subset[,c('A')]))
unname(rowSums(morph_tab_subset[,c('B', 'C', 'D', 'E')]))
morph_tab_subset
morph_tab_subset[,2:ncol(morph_tab_subset)] <- data.frame(apply(morph_tab_subset[2:ncol(morph_tab_subset)], 2, as.numeric))
morph_tab_subset
str(morph_tab_subset)
`A` <- as.numeric(unname(morph_tab_subset[,c('A')]))
`B-E` <- unname(rowSums(morph_tab_subset[,c('B', 'C', 'D', 'E')]))
moph_phase_A_to_BE <- data.frame(`A` = `A`, `B-E` = `B-E`  )
moph_phase_A_to_BE
fisher.test(moph_phase_A_to_BE)
morph_tab$Morphotype
morph_tab_subset <- rbind(morph_tab[morph_tab$Morphotype == 'ground piece',], c('`other determinate`', unname(colSums(morph_tab[!morph_tab$Morphotype %in% c('ground piece', 'unipoint'), 2:ncol(morph_tab)]))))
# make numeric
morph_tab_subset[,2:ncol(morph_tab_subset)] <- data.frame(apply(morph_tab_subset[2:ncol(morph_tab_subset)], 2, as.numeric))
`A` <- as.numeric(unname(morph_tab_subset[,c('A')]))
`B-E` <- unname(rowSums(morph_tab_subset[,c('B', 'C', 'D', 'E')]))
moph_phase_A_to_BE <- data.frame(`A` = `A`, `B-E` = `B-E`  )
moph_phase_A_to_BE
fisher.test(moph_phase_A_to_BE)
morph_tab_subset <- rbind(morph_tab[morph_tab$Morphotype == 'spatula',], c('`other determinate`', unname(colSums(morph_tab[!morph_tab$Morphotype %in% c('spatula', 'unipoint'), 2:ncol(morph_tab)]))))
# make numeric
morph_tab_subset[,2:ncol(morph_tab_subset)] <- data.frame(apply(morph_tab_subset[2:ncol(morph_tab_subset)], 2, as.numeric))
`A` <- as.numeric(unname(morph_tab_subset[,c('A')]))
`B-E` <- unname(rowSums(morph_tab_subset[,c('B', 'C', 'D', 'E')]))
moph_phase_A_to_BE <- data.frame(`A` = `A`, `B-E` = `B-E`  )
moph_phase_A_to_BE
`E` <- as.numeric(unname(morph_tab_subset[,c('E')]))
`A-D` <- unname(rowSums(morph_tab_subset[,c('B', 'C', 'D', 'A')]))
moph_phase_AD_to_E <- data.frame(`A-D` = `A-D`, `E` = `E`  )
moph_phase_AD_to_E
fisher.test(moph_phase_AD_to_E)
manf_tab <- dcast(Manufact.method ~ PHASE, data = bone_data)
manf_tab
manf_tab[grepl("SL", Manufact.method),]
manf_tab[grepl("SL", manf_tab$Manufact.method),]
colSums(manf_tab[grepl("SL", manf_tab$Manufact.method),])
Scraping <- colSums(manf_tab[grepl("SL", manf_tab$Manufact.method),2:ncol(manf_tab)])
Scraping
6+9
colSums(manf_tab[!grepl("SL", manf_tab$Manufact.method),2:ncol(manf_tab)])
other_determinate <- colSums(manf_tab[!grepl("SL", manf_tab$Manufact.method),2:ncol(manf_tab)])
scape <- data.frame(Scraping, other_determinate)
scape
scape <- rbind(Scraping, other_determinate)
scape
`A-B` <- unname(rowSums(scape[,c('B', 'A')]))
`C-E` <- unname(rowSums(scape[,c('C', 'D', 'E)]))
scape <-  data.frame(`A-B` = `A-B`, `C-E` = `C-E`  )
`C-E` <- unname(rowSums(scape[,c('C', 'D', 'E')]))
scape <-  data.frame(`A-B` = `A-B`, `C-E` = `C-E`  )
scape
manf_tab
other_determinate[!(other_determinate$Manufact.method %in% c('I', 'U')), ]
Scraping <- colSums(manf_tab[grepl("SL", manf_tab$Manufact.method),2:ncol(manf_tab)])
other_determinate <- colSums(manf_tab[!grepl("SL", manf_tab$Manufact.method),2:ncol(manf_tab)])
other_determinate
other_determinate <- manf_tab[!grepl("SL", manf_tab$Manufact.method),2:ncol(manf_tab)]
other_determinate
other_determinate <- manf_tab[!grepl("SL", manf_tab$Manufact.method),]
other_determinate
other_determinate <- other_determinate[!(other_determinate$Manufact.method %in% c('I', 'U')), ]
other_determinate
other_determinate <- other_determinate[!(other_determinate$Manufact.method %in% c('I', 'U', 'N')), ]
other_determinate
other_determinate <- manf_tab[!grepl("SL", manf_tab$Manufact.method),]
other_determinate <- other_determinate[!(other_determinate$Manufact.method %in% c('I', 'U', 'N', '')), ]
other_determinate
other_determinate <- rowSums(other_determinate[,2;ncol(other_determinate)])
other_determinate <- rowSums(other_determinate[,2:ncol(other_determinate)])
other_determinate
other_determinate <- manf_tab[!grepl("SL", manf_tab$Manufact.method),]
other_determinate <- other_determinate[!(other_determinate$Manufact.method %in% c('I', 'U', 'N', '')), ]
other_determinate <- colSums(other_determinate[,2:ncol(other_determinate)])
other_determinate
scape <- rbind(Scraping, other_determinate)
`A-B` <- unname(rowSums(scape[,c('B', 'A')]))
`C-E` <- unname(rowSums(scape[,c('C', 'D', 'E')]))
scape <-  data.frame(`A-B` = `A-B`, `C-E` = `C-E`  )
scape
fisher.test(scape)
grind <- colSums(manf_tab[grepl("G", manf_tab$Manufact.method),2:ncol(manf_tab)])
other_determinate <- manf_tab[!grepl("G", manf_tab$Manufact.method),]
other_determinate <- other_determinate[!(other_determinate$Manufact.method %in% c('I', 'U', 'N', '')), ]
other_determinate <- colSums(other_determinate[,2:ncol(other_determinate)])
scape <- rbind(Scraping, other_determinate)
`A-B` <- unname(rowSums(scape[,c('B', 'A')]))
`C-D` <- unname(rowSums(scape[,c('C', 'D')]))
E <- unname(rowSums(scape[,c('E')]))
grind <- rbind(grind, other_determinate)
`A-B` <- unname(rowSums(grind[,c('B', 'A')]))
`C-D` <- unname(rowSums(grind[,c('C', 'D')]))
E <- unname(rowSums(scape[,c('E')]))
scape[,c('E')]
as.numeric(unname(scape[,c('E')]))
grind <-  data.frame(`A-B` = `A-B`, `C-D` = `C-D`, E = E  )
grind
chi.test(grind)
??chi
chisq.test(grind)
as.numeric(unname(scape[,c('E')]))
grind <-  data.frame(`A-B` = `A-B`, `C-D` = `C-D`, E = E  )
grind
as.numeric(unname(scape[,c('E')]))
unname(rowSums(grind[,c('B', 'A')]))
grind <- colSums(manf_tab[grepl("G", manf_tab$Manufact.method),2:ncol(manf_tab)])
other_determinate <- manf_tab[!grepl("G", manf_tab$Manufact.method),]
other_determinate <- other_determinate[!(other_determinate$Manufact.method %in% c('I', 'U', 'N', '')), ]
other_determinate <- colSums(other_determinate[,2:ncol(other_determinate)])
grind <- rbind(grind, other_determinate)
`A-B` <- unname(rowSums(grind[,c('B', 'A')]))
`C-D` <- unname(rowSums(grind[,c('C', 'D')]))
E <- as.numeric(unname(scape[,c('E')]))
E
E <- as.numeric(unname(grind[,c('E')]))
E
grind <-  data.frame(`A-B` = `A-B`, `C-D` = `C-D`, E = E  )
grind
chisq.test(grind)
chisq.test(grind[,1:2])
`A-B` <- unname(rowSums(grind[,c('B', 'A')]))
`C-E` <- unname(rowSums(grind[,c('C', 'D', 'E')]))
rind <- colSums(manf_tab[grepl("G", manf_tab$Manufact.method),2:ncol(manf_tab)])
other_determinate <- manf_tab[!grepl("G", manf_tab$Manufact.method),]
other_determinate <- other_determinate[!(other_determinate$Manufact.method %in% c('I', 'U', 'N', '')), ]
other_determinate <- colSums(other_determinate[,2:ncol(other_determinate)])
grind <- rbind(grind, other_determinate)
`A-B` <- unname(rowSums(grind[,c('B', 'A')]))
`C-E` <- unname(rowSums(grind[,c('C', 'D', 'E')]))
grind <- colSums(manf_tab[grepl("G", manf_tab$Manufact.method),2:ncol(manf_tab)])
other_determinate <- manf_tab[!grepl("G", manf_tab$Manufact.method),]
other_determinate <- other_determinate[!(other_determinate$Manufact.method %in% c('I', 'U', 'N', '')), ]
other_determinate <- colSums(other_determinate[,2:ncol(other_determinate)])
grind <- rbind(grind, other_determinate)
`A-B` <- unname(rowSums(grind[,c('B', 'A')]))
`C-E` <- unname(rowSums(grind[,c('C', 'D', 'E')]))
grind <-  data.frame(`A-B` = `A-B`, `C-E` = `C-E` )
grind
chisq.test(grind)
chisq.test(data.frame(x = c(30,  30,	31), y = c(5,	15,	30)))
data.frame(x = c(30,  30,	31), y = c(5,	15,	30))
chisq.test(data.frame(x = c(30,  5),
y = c(30   15),
z = c(31, 30)))
data.frame(x = c(30, 5),
y = c(30  15),
z = c(31, 30))
data.frame(x = c(30, 5),
y = c(30  15),
z = c(31, 30))
chisq.test(data.frame(x = c(30, 5),
y = c(30, 15),
z = c(31, 30)))
grind <-  data.frame(`A-B` = `A-B`, `C-D` = `C-D`)
grind
chisq.test(grind)
grind <-  data.frame(`A-B` = `A-B`, `C-E` = `C-E` )
grind
chisq.test(grind)
grind <-  data.frame(`A-B` = `A-B`, `C-D` = `C-D` )
grind
chisq.test(grind)
grind <-  data.frame( `C-D` = `C-D`, E = E )
grind
chisq.test(grind)
grind <- colSums(manf_tab[grepl("G", manf_tab$Manufact.method),2:ncol(manf_tab)])
other_determinate <- manf_tab[!grepl("G", manf_tab$Manufact.method),]
other_determinate <- other_determinate[!(other_determinate$Manufact.method %in% c('I', 'U', 'N', '')), ]
other_determinate <- colSums(other_determinate[,2:ncol(other_determinate)])
grind <- rbind(grind, other_determinate)
`A-B` <- unname(rowSums(grind[,c('B', 'A')]))
`C-D` <- unname(rowSums(grind[,c('C', 'D')]))
`C-E` <- unname(rowSums(grind[,c('C', 'D', 'E')]))
E <- as.numeric(unname(grind[,c('E')]))
grind <-  data.frame( `C-D` = `C-D`, E = E )
grind
chisq.test(grind)
grind
grind <- colSums(manf_tab[grepl("G", manf_tab$Manufact.method),2:ncol(manf_tab)])
grind
other_determinate <- manf_tab[!grepl("G", manf_tab$Manufact.method),]
other_determinate <- other_determinate[!(other_determinate$Manufact.method %in% c('I', 'U', 'N', '')), ]
other_determinate <- colSums(other_determinate[,2:ncol(other_determinate)])
other_determinate <- colSums(other_determinate[,2:ncol(other_determinate)])
grind <- rbind(grind, other_determinate)
grind
grind <-  data.frame( `C-D` = `C-D`, E = E )
grind
chisq.test(grind)
grind <-  data.frame( `A-B` = `A-B`, `C-D` = `C-D`, E = E )
grind
chisq.test(grind)
shave <- colSums(manf_tab[grepl("C", manf_tab$Manufact.method),2:ncol(manf_tab)])
other_determinate <- manf_tab[!grepl("C", manf_tab$Manufact.method),]
other_determinate <- other_determinate[!(other_determinate$Manufact.method %in% c('I', 'U', 'N', '')), ]
other_determinate <- colSums(other_determinate[,2:ncol(other_determinate)])
shave <- rbind(shave, other_determinate)
`A-B` <- unname(rowSums(shave[,c('B', 'A')]))
`C-D` <- unname(rowSums(shave[,c('C', 'D')]))
`C-E` <- unname(rowSums(shave[,c('C', 'D', 'E')]))
E <- as.numeric(unname(shave[,c('E')]))
shave <-  data.frame(`A-B` = `A-B`, `C-E` = `C-E`)
shave
chisq.test(shave)
fisher.test(shave)
A <- as.numeric(unname(shave[,c('A')]))
shave <- colSums(manf_tab[grepl("C", manf_tab$Manufact.method),2:ncol(manf_tab)])
other_determinate <- manf_tab[!grepl("C", manf_tab$Manufact.method),]
other_determinate <- other_determinate[!(other_determinate$Manufact.method %in% c('I', 'U', 'N', '')), ]
other_determinate <- colSums(other_determinate[,2:ncol(other_determinate)])
shave <- rbind(shave, other_determinate)
`A-B` <- unname(rowSums(shave[,c('B', 'A')]))
`C-D` <- unname(rowSums(shave[,c('C', 'D')]))
`C-E` <- unname(rowSums(shave[,c('C', 'D', 'E')]))
E <- as.numeric(unname(shave[,c('E')]))
A <- as.numeric(unname(shave[,c('A')]))
`B-E` <- unname(rowSums(shave[,c('B', 'C', 'D')]))
shave <-  data.frame(A = A, `B-E` = `B-E` )
shave
test
fisher.test(shave)
shave
grind <- colSums(manf_tab[grepl("G", manf_tab$Manufact.method),2:ncol(manf_tab)])
other_determinate <- manf_tab[!grepl("G", manf_tab$Manufact.method),]
other_determinate <- other_determinate[!(other_determinate$Manufact.method %in% c('I', 'U', 'N', '')), ]
other_determinate <- colSums(other_determinate[,2:ncol(other_determinate)])
grind <- rbind(grind, other_determinate)
`A-B` <- unname(rowSums(grind[,c('B', 'A')]))
`B-E` <- unname(rowSums(grind[,c('B', 'C', 'D')]))
`C-D` <- unname(rowSums(grind[,c('C', 'D')]))
`C-E` <- unname(rowSums(grind[,c('C', 'D', 'E')]))
E <- as.numeric(unname(grind[,c('E')]))
A <- as.numeric(unname(grind[,c('A')]))
grind <-  data.frame( `A-B` = `A-B`, `C-D` = `C-D` )
grind
chisq.test(grind)
chisq.test(grind)
grind <-  data.frame( `C-D` = `C-D`, E = E )
grind
chisq.test(grind)
grind <-  data.frame( `A-B` = `A-B`, `C-D` = `C-D`, E = E )
grind
chisq.test(grind)
shave <- colSums(manf_tab[grepl("C", manf_tab$Manufact.method),2:ncol(manf_tab)])
other_determinate <- manf_tab[!grepl("C", manf_tab$Manufact.method),]
other_determinate <- other_determinate[!(other_determinate$Manufact.method %in% c('I', 'U', 'N', '')), ]
other_determinate <- colSums(other_determinate[,2:ncol(other_determinate)])
shave <- rbind(shave, other_determinate)
`A-B` <- unname(rowSums(shave[,c('B', 'A')]))
`B-E` <- unname(rowSums(shave[,c('B', 'C', 'D')]))
`C-D` <- unname(rowSums(shave[,c('C', 'D')]))
`C-E` <- unname(rowSums(shave[,c('C', 'D', 'E')]))
E <- as.numeric(unname(shave[,c('E')]))
A <- as.numeric(unname(shave[,c('A')]))
shave <-  data.frame(`A-B` = `A-B`, `C-E` = `C-E`)
shave
fisher.test(shave)
shave <-  data.frame(A = A, `B-E` = `B-E` )
shave
fisher.test(shave)
shave <- colSums(manf_tab[grepl("^C$", manf_tab$Manufact.method),2:ncol(manf_tab)])
shave <- rbind(shave, other_determinate)
shave
manf_tab
A <- as.numeric(unname(shave[,c('A')]))
`B-E` <- unname(rowSums(shave[,c('B', 'C', 'D', 'E')]))
shave <-  data.frame(A = A, `B-E` = `B-E` )
shave
fisher.test(shave)
df <- matrix(c(2,  0, 14,	125), nrow = 2)
df
df <- matrix(c(2,  0, 14,	125), ncol= 2)
df
?matrix
df <- matrix(c(2,  0, 14,	125), ncol= 2, byrow = TRUE)
df
fisher.test(df)
shave <-  data.frame(A = A, `B-E` = `B-E` )
shave
fisher.test(shave)
manf_tab
colSums(manf_tab)
colSums(manf_tab[,-1])
other_determinate
other_determinate[(other_determinate$Manufact.method %in% c('I', 'U', 'N', '')), ]
shave <- colSums(manf_tab[grepl("C", manf_tab$Manufact.method),2:ncol(manf_tab)])
other_determinate <- manf_tab[!grepl("C", manf_tab$Manufact.method),]
other_determinate[(other_determinate$Manufact.method %in% c('I', 'U', 'N', '')), ]
colSums(manf_tab[!grepl("^C$", manf_tab$Manufact.method),2:ncol(manf_tab)])
shave <- colSums(manf_tab[grepl("^C$", manf_tab$Manufact.method),2:ncol(manf_tab)])
non_shave <- colSums(manf_tab[!grepl("^C$", manf_tab$Manufact.method),2:ncol(manf_tab)])
shave <- rbind(shave, non_shave)
A <- as.numeric(unname(shave[,c('A')]))
`B-E` <- unname(rowSums(shave[,c('B', 'C', 'D', 'E')]))
shave <-  data.frame(A = A, `B-E` = `B-E` )
shave
method
# shaving only
shave <- colSums(manf_tab[grepl("^C$", manf_tab$Manufact.method),2:ncol(manf_tab)])
non_shave <- manf_tab[!grepl("^C$", manf_tab$Manufact.method),2:ncol(manf_tab)]
non_shave <- non_shave[!(non_shave.method %in% c('I', 'U', 'N', '')), ]
non_shave <- non_shave[!(non_shave$Manufact.method %in% c('I', 'U', 'N', '')), ]
shave <- rbind(shave, non_shave)
non_shave
shave <- colSums(manf_tab[grepl("^C$", manf_tab$Manufact.method),2:ncol(manf_tab)])
non_shave <- manf_tab[!grepl("^C$", manf_tab$Manufact.method),2:ncol(manf_tab)]
non_shave
non_shave <- manf_tab[!grepl("^C$", manf_tab$Manufact.method),]
non_shave
non_shave <- non_shave[!(non_shave$Manufact.method %in% c('I', 'U', 'N', '')), ]
non_shave
colSums(non_shave[,2:ncol(non_shave)]
)
shave <- rbind(shave, colSums(non_shave[,2:ncol(non_shave)])
)
shave
A <- as.numeric(unname(shave[,c('A')]))
`B-E` <- unname(rowSums(shave[,c('B', 'C', 'D', 'E')]))
shave <-  data.frame(A = A, `B-E` = `B-E` )
shave
fisher.test(shave)
